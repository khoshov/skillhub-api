version: '3'

services:
  django:
    container_name: django
    build: .
    env_file:
      - .env
    command: /usr/src/app/entrypoint.sh
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - elasticsearch
  postgres:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./pgdata/:/var/lib/postgresql/data/
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.17.10
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./esdata:/var/lib/elasticsearch/data
    ports:
      - "9200:9200"
#  kibana:
#    container_name: kibana
#    image: kibana:7.17.10
#    restart: unless-stopped
#    depends_on:
#      - elasticsearch
#    ports:
#      - "5601:5601"
#    env_file:
#      - .env
  nginx-proxy:
    container_name: nginx-proxy
    image: nginxproxy/nginx-proxy
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - ./nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
    depends_on:
      - django
  nginx-proxy-acme:
    container_name: nginx-proxy-acme
    image: nginxproxy/acme-companion
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy
volumes:
  certs:
  html:
  vhost:
  acme:
